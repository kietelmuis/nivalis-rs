name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - run: rustup toolchain install stable --profile minimal

      - name: Build
        run: cargo build --release

      - name: List build artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: find target/release -type f -executable -not -path "*/deps/*" | grep -v "\.d$"

      - name: List build artifacts (macOS)
        if: matrix.os == 'macos-latest'
        run: find target/release -type f -perm +111 -not -path "*/deps/*" | grep -v "\.d$"

      - name: List build artifacts (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: dir target\release\*.exe /b /s | findstr /v "\\deps\\"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nivalis-${{ matrix.os }}
          path: |
            target/release/nivalis*
            target/release/nivalis*.exe
            !target/release/*.d
            !target/release/deps/
